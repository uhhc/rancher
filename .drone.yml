---
kind: pipeline
name: default-linux-amd64

platform:
  os: linux
  arch: amd64

steps:
- name: build
  image: rancher/dapper:v0.4.1
  commands:
  - dapper ci
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    event:
    - push
    - pull_request
    - tag

- name: stage-binaries
  image: rancher/dapper:v0.4.1
  commands:
  - "cp -r ./bin/* ./package/"
  when:
    event:
    - push
    - tag

- name: docker-publish-head
  image: plugins/docker
  settings:
    build_args:
    - ARCH=amd64
    - VERSION=${DRONE_BRANCH/release\//}-${DRONE_BUILD_NUMBER}-head
    - SYSTEM_CHART_DEFAULT_BRANCH=dev
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile
    tag: ${DRONE_BRANCH/release\//}-head-linux-amd64
    password:
      from_secret: docker_password
    repo: rancher/rancher
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - "refs/heads/master"
      - "refs/heads/release/v*"
    event:
    - push

- name: docker-publish-head-agent
  image: plugins/docker
  settings:
    build_args:
    - ARCH=amd64
    - VERSION=${DRONE_BRANCH/release\//}-${DRONE_BUILD_NUMBER}-head
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.agent
    tag: ${DRONE_BRANCH/release\//}-head-linux-amd64
    password:
      from_secret: docker_password
    repo: rancher/rancher-agent
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - "refs/heads/master"
      - "refs/heads/release/v*"
    event:
    - push

- name: docker-mirror-istio
  image: docker
  volumes:
  - name: docker
    path: /var/run/docker.sock
  environment:
    PASSWORD:
      from_secret: docker_password
    USERNAME:
      from_secret: docker_username
  commands:
  - docker login -u $USERNAME -p $PASSWORD
  - cat scripts/istio-images-mirror | ./scripts/docker-pull-pusher.sh
  settings:
    custom_dns: 1.1.1.1
  when:
    ref:
      include:
      - "refs/heads/master"
      - "refs/heads/release/v*"
    event:
    - push

- name: docker-publish
  image: plugins/docker
  settings:
    build_args:
    - ARCH=amd64
    - "VERSION=${DRONE_TAG}"
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile
    password:
      from_secret: docker_password
    repo: rancher/rancher
    tag: "${DRONE_TAG}-linux-amd64"
    username:
      from_secret: docker_username
  when:
    event:
    - tag

- name: docker-publish-agent
  image: plugins/docker
  settings:
    build_args:
    - ARCH=amd64
    - "VERSION=${DRONE_TAG}"
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.agent
    password:
      from_secret: docker_password
    repo: rancher/rancher-agent
    tag: "${DRONE_TAG}-linux-amd64"
    username:
      from_secret: docker_username
  when:
    event:
    - tag

- name: github_binary_prerelease
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    checksum:
    - sha256
    files:
    - "bin/rancher-*"
    prerelease: true
  when:
    event:
    - tag
    ref:
      include:
      - "refs/tags/*rc*"
      - "refs/tags/*alpha*"

- name: github_binary_release
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    checksum:
    - sha256
    files:
    - "bin/rancher-*"
  when:
    event:
    - tag
    ref:
      include:
      - "refs/tags/v2*"
      exclude:
      - "refs/tags/*rc*"
      - "refs/tags/*alpha*"

- name: slack_notify
  image: plugins/slack
  settings:
    template: "Build {{build.link}} failed to publish an image/artifact.\n"
    username: Drone_Publish
    webhook:
      from_secret: slack_webhook
  when:
    event:
      exclude:
      - pull_request
    instance:
    - drone-publish.rancher.io
    status:
    - failure

volumes:
- name: docker
  host:
    path: /var/run/docker.sock

trigger:
  event:
    exclude:
    - promote
---
kind: pipeline
name: default-linux-arm64

platform:
  os: linux
  arch: arm64

steps:
- name: build
  image: rancher/dapper:v0.4.1
  commands:
  - dapper ci
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    event:
    - push
    - pull_request
    - tag

- name: stage-binaries
  image: rancher/dapper:v0.4.1
  commands:
  - "cp -r ./bin/* ./package/"
  when:
    event:
    - push
    - tag

- name: docker-publish-head
  image: plugins/docker
  settings:
    build_args:
    - ARCH=arm64
    - VERSION=${DRONE_BRANCH/release\//}-${DRONE_BUILD_NUMBER}-head
    - SYSTEM_CHART_DEFAULT_BRANCH=dev
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile
    tag: ${DRONE_BRANCH/release\//}-head-linux-arm64
    password:
      from_secret: docker_password
    repo: rancher/rancher
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - "refs/heads/master"
      - "refs/heads/release/v*"
    event:
    - push

- name: docker-publish-head-agent
  image: plugins/docker
  settings:
    build_args:
    - ARCH=arm64
    - VERSION=${DRONE_BRANCH/release\//}-${DRONE_BUILD_NUMBER}-head
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.agent
    tag: ${DRONE_BRANCH/release\//}-head-linux-arm64
    password:
      from_secret: docker_password
    repo: rancher/rancher-agent
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - "refs/heads/master"
      - "refs/heads/release/v*"
    event:
    - push

- name: docker-publish
  image: plugins/docker
  settings:
    build_args:
    - ARCH=arm64
    - "VERSION=${DRONE_TAG}"
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile
    password:
      from_secret: docker_password
    repo: rancher/rancher
    tag: "${DRONE_TAG}-linux-arm64"
    username:
      from_secret: docker_username
  when:
    event:
    - tag

- name: docker-publish-agent
  image: plugins/docker
  settings:
    build_args:
    - ARCH=arm64
    - "VERSION=${DRONE_TAG}"
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.agent
    password:
      from_secret: docker_password
    repo: rancher/rancher-agent
    tag: "${DRONE_TAG}-linux-arm64"
    username:
      from_secret: docker_username
  when:
    event:
    - tag

- name: slack_notify
  image: plugins/slack
  settings:
    template: "Build {{build.link}} failed to publish an image/artifact.\n"
    username: Drone_Publish
    webhook:
      from_secret: slack_webhook
  when:
    event:
      exclude:
      - pull_request
    instance:
    - drone-publish.rancher.io
    status:
    - failure

volumes:
- name: docker
  host:
    path: /var/run/docker.sock

trigger:
  event:
    exclude:
    - promote
---
kind: pipeline
name: default-windows-1809

platform:
  os: windows
  arch: amd64
  version: 1809

steps:
  - name: build
    pull: always
    image: maiwj/dapper:windows-1809
    commands:
      - dapper.exe -f Dockerfile-windows.dapper -d ci
    volumes:
      - name: docker_pipe
        path: \\\\.\\pipe\\docker_engine
    when:
      event:
        - push
        - pull_request
        - tag

  - name: stage-binaries
    image: maiwj/dapper:windows-1809
    commands:
      - "cp -r ./bin/* ./package/windows/"
    when:
      event:
        - push
        - tag

  - name: docker-publish-head-agent
    image: plugins/docker:windows-1809-amd64
    settings:
      build_args:
        - SERVERCORE_VERSION=1809
        - ARCH=amd64
        - VERSION=${DRONE_BRANCH/release\//}-${DRONE_BUILD_NUMBER}-head
      context: package/windows
      custom_dns: 1.1.1.1
      dockerfile: package/windows/Dockerfile.agent
      password:
        from_secret: docker_password
      repo: rancher/rancher-agent
      tag: ${DRONE_BRANCH/release\//}-head-windows-1809
      username:
        from_secret: docker_username
    volumes:
      - name: docker_pipe
        path: \\\\.\\pipe\\docker_engine
    when:
      ref:
        include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
      event:
        - push

  - name: docker-publish-agent
    image: plugins/docker:windows-1809-amd64
    settings:
      build_args:
        - SERVERCORE_VERSION=1809
        - ARCH=amd64
        - "VERSION=${DRONE_TAG}"
      context: package/windows
      custom_dns: 1.1.1.1
      dockerfile: package/windows/Dockerfile.agent
      password:
        from_secret: docker_password
      repo: rancher/rancher-agent
      tag: "${DRONE_TAG}-windows-1809"
      username:
        from_secret: docker_username
    volumes:
      - name: docker_pipe
        path: \\\\.\\pipe\\docker_engine
    when:
      event:
        - tag

  - name: slack_notify
    image: plugins/slack
    settings:
      template: "Build {{build.link}} failed to publish an image/artifact.\n"
      username: Drone_Publish
      webhook:
        from_secret: slack_webhook
    when:
      event:
        exclude:
          - pull_request
      instance:
        - drone-publish.rancher.io
      status:
        - failure

volumes:
  - name: docker_pipe
    host:
      path: \\\\.\\pipe\\docker_engine

trigger:
  event:
    exclude:
      - promote
---
kind: pipeline
name: default-windows-1903

platform:
  os: windows
  arch: amd64
  version: 1903

steps:
  - name: build
    pull: always
    image: maiwj/dapper:windows-1903
    commands:
      - dapper.exe -f Dockerfile-windows.dapper -d ci
    volumes:
      - name: docker_pipe
        path: \\\\.\\pipe\\docker_engine
    when:
      event:
        - push
        - pull_request
        - tag

  - name: stage-binaries
    image: maiwj/dapper:windows-1903
    commands:
      - "cp -r ./bin/* ./package/windows/"
    when:
      event:
        - push
        - tag

  - name: docker-publish-head-agent
    image: plugins/docker:windows-1903-amd64
    settings:
      build_args:
        - SERVERCORE_VERSION=1903
        - ARCH=amd64
        - VERSION=${DRONE_BRANCH/release\//}-${DRONE_BUILD_NUMBER}-head
      context: package/windows
      custom_dns: 1.1.1.1
      dockerfile: package/windows/Dockerfile.agent
      password:
        from_secret: docker_password
      repo: rancher/rancher-agent
      tag: ${DRONE_BRANCH/release\//}-head-windows-1903
      username:
        from_secret: docker_username
    volumes:
      - name: docker_pipe
        path: \\\\.\\pipe\\docker_engine
    when:
      ref:
        include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
      event:
        - push

  - name: docker-publish-agent
    image: plugins/docker:windows-1903-amd64
    settings:
      build_args:
        - SERVERCORE_VERSION=1903
        - ARCH=amd64
        - "VERSION=${DRONE_TAG}"
      context: package/windows
      custom_dns: 1.1.1.1
      dockerfile: package/windows/Dockerfile.agent
      password:
        from_secret: docker_password
      repo: rancher/rancher-agent
      tag: "${DRONE_TAG}-windows-1903"
      username:
        from_secret: docker_username
    volumes:
      - name: docker_pipe
        path: \\\\.\\pipe\\docker_engine
    when:
      event:
        - tag

  - name: slack_notify
    image: plugins/slack
    settings:
      template: "Build {{build.link}} failed to publish an image/artifact.\n"
      username: Drone_Publish
      webhook:
        from_secret: slack_webhook
    when:
      event:
        exclude:
          - pull_request
      instance:
        - drone-publish.rancher.io
      status:
        - failure

volumes:
  - name: docker_pipe
    host:
      path: \\\\.\\pipe\\docker_engine

trigger:
  event:
    exclude:
      - promote
---
kind: pipeline
name: manifest

steps:
- name: push-head-manifest
  image: plugins/manifest:1.1.0
  settings:
    ignore_missing: true
    password:
      from_secret: docker_password
    spec: manifest.tmpl
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - "refs/heads/master"
      - "refs/heads/release/v*"
    event:
    - push

- name: push-head-agent-manifest
  image: plugins/manifest:1.1.0
  settings:
    ignore_missing: true
    password:
      from_secret: docker_password
    spec: manifest-agent.tmpl
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - "refs/heads/master"
      - "refs/heads/release/v*"
    event:
    - push

- name: push-manifest
  image: plugins/manifest:1.1.0
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: manifest.tmpl
    ignore_missing: true
  when:
    event:
    - tag

- name: push-agent-manifest
  image: plugins/manifest:1.1.0
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: manifest-agent.tmpl
    ignore_missing: true
  when:
    event:
    - tag

- name: build-chart
  image: rancher/dapper:v0.4.1
  commands:
  - dapper chart/ci
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    event:
    - push
    - tag

- name: chart-publish
  image: plugins/gcs
  settings:
    acl:
    - allUsers:READER
    cache_control: "public,no-cache,proxy-revalidate"
    source: bin/chart
    target: releases.rancher.com/server-charts
    token:
      from_secret: google_auth_key
  when:
    event:
    - tag

- name: slack_notify
  image: plugins/slack
  settings:
    template: "Build {{build.link}} failed to push manifests.\n"
    username: Drone_Publish
    webhook:
      from_secret: slack_webhook
  when:
    event:
      exclude:
      - pull_request
    instance:
      include:
      - drone-publish.rancher.io
    status:
      - failure

volumes:
- name: docker
  host:
    path: /var/run/docker.sock

trigger:
  event:
    exclude:
    - promote

depends_on:
- default-linux-amd64
- default-linux-arm64
- default-windows-1809
- default-windows-1903
---
kind: pipeline
name: publish

platform:
  os: linux
  arch: amd64

steps:
- name: chart-promote
  image: rancher/dapper:v0.4.1
  commands:
  - dapper chart/copy
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    event:
    - promote
    target:
    - promote-stable

- name: chart-publish
  image: plugins/gcs
  settings:
    acl:
    - allUsers:READER
    cache_control: "public,no-cache,proxy-revalidate"
    source: bin/chart
    target: releases.rancher.com/server-charts
    token:
      from_secret: google_auth_key

- name: slack_notify
  image: plugins/slack
  settings:
    template: "Build {{build.link}} failed to promote chart.\n"
    username: Drone_Publish
    webhook:
      from_secret: slack_webhook
  when:
    event:
      exclude:
      - pull_request
      instance:
        include:
        - drone-publish.rancher.io
      status:
      - failure

volumes:
- name: docker
  host:
    path: /var/run/docker.sock

trigger:
  event:
  - promote
...
